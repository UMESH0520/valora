version: '3.8'

services:
  # VALORA Backend API
  valora-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: valora-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
      - REDIS_RATE_LIMIT_URL=redis://redis:6379/1
      - DATABASE_URL=sqlite:///./data/valora.db
      - ALGOD_ADDRESS=https://testnet-api.algonode.cloud
      - FRONTEND_URL=http://localhost:5173
    volumes:
      - valora_data:/app/data
      - valora_logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - valora-network

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: valora-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - valora-network

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: valora-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - valora-network

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: valora-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=valora2024
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - valora-network

volumes:
  valora_data:
    driver: local
  valora_logs:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  valora-network:
    driver: bridge